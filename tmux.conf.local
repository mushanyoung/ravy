# copy mode
bind Space copy-mode
bind C-Space copy-mode

# save entire scroll back history to a file
bind P command-prompt -p "save scrollback to file:" -I "~/.tmux/scrollback" "capture-pane -S -50000 ; save-buffer %1 ; delete-buffer"

# window navigation
bind t swap-window -t 1

# swap current pane
bind , swap-pane -D
bind . swap-pane -U

# use h,j,k,l to resize panes
bind h resize-pane -L 5
bind j resize-pane -D 5
bind k resize-pane -U 5
bind l resize-pane -R 5

bind c new-window
bind n new-window -c $HOME

# C-c to open new window instead of new session
unbind C-c

# determine if focused pane foregrounds vim
_pane_is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# direct C-Space,w to vim
bind w if-shell "$_pane_is_vim" "send-keys Space w"

# navigate within vim window or tmux pane
bind -n M-h if-shell "$_pane_is_vim" "send-keys M-h" "select-pane -L"
bind -n M-j if-shell "$_pane_is_vim" "send-keys M-j" "select-pane -D"
bind -n M-k if-shell "$_pane_is_vim" "send-keys M-k" "select-pane -U"
bind -n M-l if-shell "$_pane_is_vim" "send-keys M-l" "select-pane -R"
bind -n M-p if-shell "$_pane_is_vim" "send-keys M-p" "select-pane -l"

# kill vim window or tmux pane
bind -n M-c if-shell "$_pane_is_vim" "send-keys M-c" "confirm-before -p 'kill-pane #P? (y/N)' kill-pane"

# split vim window or tmux pane
bind -n 'M-\' if-shell "$_pane_is_vim" "send-keys M-\\" "split-window -h -c '#{pane_current_path}'"
bind -n M-- if-shell "$_pane_is_vim" "send-keys M--" "split-window -v -c '#{pane_current_path}'"

# open and kill window
bind -n M-t new-window
bind -n M-w kill-window

bind -n M-[ previous-window
bind -n M-] next-window
bind -n M-n last-window

bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
bind -n M-5 select-window -t 5
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
bind -n M-0 select-window -t 10


# -- display -------------------------------------------------------------------

# RGB 24-bit colour support, possible values are:
#   - true
#   - false
#   - auto (default)
#
# automatic detection relies on the COLORTERM environment variable being defined
# to 'truecolor' or '24bit' or '$ tput colors' answering '16777216'
# see https://github.com/termstandard/colors
tmux_conf_24b_colour=auto


# -- theming -------------------------------------------------------------------

# terminal title
tmux_conf_theme_terminal_title='❐ #S'

# window status style
tmux_conf_theme_window_status_fg='colour220'         # set in the format
tmux_conf_theme_window_status_bg='#080808'           # dark gray
tmux_conf_theme_window_status_attr='none'
tmux_conf_theme_window_status_format='#I#[fg=#8a8a8a] #T'
# tmux_conf_theme_window_status_format='#{circled_window_index} #W'
# tmux_conf_theme_window_status_format='#I #W#{?window_bell_flag,🔔,}#{?window_zoomed_flag,🔍,}'

# window current status style
tmux_conf_theme_window_status_current_fg='colour255' # black
tmux_conf_theme_window_status_current_bg='colour026' # light blue
tmux_conf_theme_window_status_current_attr='none'
tmux_conf_theme_window_status_current_format='#T'
# tmux_conf_theme_window_status_current_format='#{circled_window_index} #W'
# tmux_conf_theme_window_status_current_format='#I #W#{?window_zoomed_flag,🔍,}'

# window activity status style
tmux_conf_theme_window_status_activity_fg='default'
tmux_conf_theme_window_status_activity_bg='default'
tmux_conf_theme_window_status_activity_attr='underscore'

# window bell status style
tmux_conf_theme_window_status_bell_fg='#ffff00'      # yellow
tmux_conf_theme_window_status_bell_bg='default'
tmux_conf_theme_window_status_bell_attr='blink,bold'

# window last status style
tmux_conf_theme_window_status_last_fg='colour255'    # light blue
tmux_conf_theme_window_status_last_bg='default'
tmux_conf_theme_window_status_last_attr='none'

# status left/right sections separators
# tmux_conf_theme_left_separator_main=''
# tmux_conf_theme_left_separator_sub='|'
# tmux_conf_theme_right_separator_main=''
# tmux_conf_theme_right_separator_sub='|'
tmux_conf_theme_left_separator_main=''  # /!\ you don't need to install Powerline
tmux_conf_theme_left_separator_sub=''   #   you only need fonts patched with
tmux_conf_theme_right_separator_main='' #   Powerline symbols or the standalone
tmux_conf_theme_right_separator_sub=''  #   PowerlineSymbols.otf font

# status left/right content:
#   - separate main sections with '|'
#   - separate subsections with ','
#   - built-in variables are:
#     - #{battery_bar}
#     - #{battery_hbar}
#     - #{battery_percentage}
#     - #{battery_status}
#     - #{battery_vbar}
#     - #{circled_session_name}
#     - #{hostname_ssh}
#     - #{hostname}
#     - #{loadavg}
#     - #{pairing}
#     - #{prefix}
#     - #{root}
#     - #{synchronized}
#     - #{uptime_d}
#     - #{uptime_h}
#     - #{uptime_m}
#     - #{uptime_s}
#     - #{username}
#     - #{username_ssh}
tmux_conf_theme_status_left=' ❐ #S '
tmux_conf_theme_status_right='#{prefix}#{pairing}#{synchronized} | #{username}#{root} | #{hostname} '

# status left style
tmux_conf_theme_status_left_fg='#000000,#e4e4e4,#e4e4e4'  # black, white , white
tmux_conf_theme_status_left_bg='#aaaa00,#ff00af,#00afff'  # yellow, pink, white blue
tmux_conf_theme_status_left_attr='bold,none,none'

# status right style
tmux_conf_theme_status_right_fg='#8a8a8a,#e4e4e4,#000000' # light gray, white, black
tmux_conf_theme_status_right_bg='#080808,#d70000,#e4e4e4' # dark gray, red, white
tmux_conf_theme_status_right_attr='none,none,bold'

# pairing indicator
tmux_conf_theme_pairing='👓 '          # U+1F453
tmux_conf_theme_pairing_fg='none'
tmux_conf_theme_pairing_bg='none'
tmux_conf_theme_pairing_attr='none'

# prefix indicator
tmux_conf_theme_prefix='⌨ '            # U+2328
tmux_conf_theme_prefix_fg='none'
tmux_conf_theme_prefix_bg='none'
tmux_conf_theme_prefix_attr='none'

# root indicator
tmux_conf_theme_root='!'
tmux_conf_theme_root_fg='none'
tmux_conf_theme_root_bg='none'
tmux_conf_theme_root_attr='bold,blink'

# synchronized indicator
tmux_conf_theme_synchronized='🔒'     # U+1F512
tmux_conf_theme_synchronized_fg='none'
tmux_conf_theme_synchronized_bg='none'
tmux_conf_theme_synchronized_attr='none'

# clock style
tmux_conf_theme_clock_colour='#00afff'  # light blue
tmux_conf_theme_clock_style='24'


# -- clipboard -----------------------------------------------------------------

# in copy mode, copying selection also copies to the OS clipboard
#   - true
#   - false (default)
#   - disabled
# on Linux, this requires xsel, xclip or wl-copy
tmux_conf_copy_to_os_clipboard=true


# -- urlscan -------------------------------------------------------------------

# options passed to urlscan
tmux_conf_urlscan_options="--compact --dedupe"


# -- user customizations -------------------------------------------------------

# this is the place to override or undo settings

# increase history size
#set -g history-limit 10000

# granular mouse options
set -g mouse-select-pane on     # click to focus pane
set -g mouse-select-window on   # click to switch windows
set -g mouse-resize-pane on     # drag to resize
set -g mouse-wheel on           # scroll inside panes

# disable mouse and focus-events by default to avoid iTerm mouse reporting warning
set -g mouse off
set -s focus-events off

# force Vi mode
#   really you should export VISUAL or EDITOR environment variable, see manual
set -g status-keys vi
set -g mode-keys vi

# replace C-b by C-Space instead of using both prefixes
unbind C-b
set -g prefix C-Space
set -g prefix2 C-Space
# bind C-Space send-prefix

# if you don't want Oh my tmux! to alter a binding or a setting, use #!important
# bind c new-window -c '#{pane_current_path}' #!important

# move status line to top
# set -g status-position top


# ------------------------------------------------------------------------------

# # /!\ do not remove the following line
# EOF
#
# # /!\ do not "uncomment" the functions: the leading "# " characters are needed
#
# # usage: #{weather}
# weather() {                                         # see https://github.com/chubin/wttr.in#one-line-output
#   curl -f -s -m 2 'wttr.in?format=3' || printf '\n' # /!\ make sure curl is installed
#   sleep 900                                         # sleep for 15 minutes, throttle network requests whatever the value of status-interval
# }
#
# # usage: #{online}
# online() {
#   ping -c 1 1.1.1.1 >/dev/null 2>&1 && printf '✔' || printf '✘'
# }
#
# # usage: #{wan_ip_v4}
# wan_ip_v4() {
#   curl -f -s -m 2 -4 ifconfig.me
#   sleep 300                                         # sleep for 5 minutes, throttle network requests whatever the value of status-interval
# }
#
# # usage: #{wan_ip_v6}
# wan_ip_v6() {
#   curl -f -s -m 2 -6 ifconfig.me
#   sleep 300                                         # sleep for 5 minutes, throttle network requests whatever the value of status-interval
# }
#
# # usage: #{github_stars}, #{github_stars tmux/tmux}, ...
# github_stars() {
#   repository=${1##*https://github.com/}
#   repository=${repository%% *}
#   repository=${repository%%.git}
#   url="https://api.github.com/repos/${repository:-gpakosz/.tmux}"
#   curl -s "$url" | perl -MJSON::PP=decode_json -CO -0777 -E '$response = decode_json(readline *STDIN); say ($response->{stargazers_count})'
#   sleep 300                                         # sleep for 5 minutes, throttle network requests whatever the value of status-interval
# }
#
# "$@"
# # /!\ do not remove the previous line
# #     do not write below this line
