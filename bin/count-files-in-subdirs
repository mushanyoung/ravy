#!/bin/bash

# Function to calculate the display width of a string with UTF-8 characters
display_width() {
  local str="$1"
  local width=0
  local c

  # Iterate over each character in the string
  while IFS= read -r -n1 c; do
    # Calculate the display width of the character
    local char_width=$(LC_ALL=C printf "%s" "$c" | wc -L)

    # Add the character width to the total width
    width=$((width + char_width))
  done <<< "$str"

  echo "$width"
}

# Print table header
printf "%-50s | %s\n" "Subdirectory" "Number of files"
printf "%-50s-|-%s\n" "--------------------------------------------------" "--------------"

total_files=0

subdir_file_counts=()

# Iterate through subdirectories in the current directory
while IFS= read -r subdir; do
  # Skip the current directory
  if [[ "$subdir" == "." ]]; then
    continue
  fi

  # Count the number of files in the subdirectory
  file_count=$(find "$subdir" -type f | wc -l)

  # Add the count to the total
  total_files=$((total_files + file_count))

  # Store the file count in an array
  subdir_file_counts+=("$file_count $subdir")
done < <(find . -maxdepth 1 -type d)

# Sort the subdirectories by the number of files in ascending order
IFS=$'\n'
sorted_subdirs=($(echo "${subdir_file_counts[*]}" | sort -n -k1,1))

# Iterate through the sorted subdirectories and print the results
for entry in "${sorted_subdirs[@]}"; do
  file_count=$(echo "$entry" | cut -d ' ' -f 1)
  subdir=$(echo "$entry" | cut -d ' ' -f 2-)
  subdir_padding=$((50 - $(display_width "$subdir")))
  printf "%s%${subdir_padding}s | %s\n" "${subdir}" "" "${file_count}"
done

# Count the number of files in the current directory
current_dir_file_count=$(find . -maxdepth 1 -type f | wc -l)

# Add the count to the total
total_files=$((total_files + current_dir_file_count))

# Print the current directory file count and total file count
printf "%-50s-|-%s\n" "--------------------------------------------------" "--------------"
current_dir_str="Current directory"
current_dir_padding=$((50 - $(display_width "$current_dir_str")))
printf "%s%${current_dir_padding}s | %s\n" "$current_dir_str" "" "${current_dir_file_count}"
printf "%-50s-|-%s\n" "--------------------------------------------------" "--------------"
total_str="Total"
total_padding=$((50 - $(display_width "$total_str")))
printf "%s%${total_padding}s | %s\n" "$total_str" "" "${total_files}"
